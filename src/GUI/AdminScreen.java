/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import AdminHandler.AdminHandler;
import DataHandler.DataHandler;
import Users.Doctor;
import Users.Secretary;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;

/**
 *
 * @author Tom
 */
public class AdminScreen extends javax.swing.JFrame {

    ArrayList dataArray;
    ArrayList<Doctor> doctorArray;
    ArrayList<Secretary> secretaryArray;

    public AdminScreen() throws IOException {
        //setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        initComponents();

        this.dataArray = DataHandler.readUserData();
        this.doctorArray = (ArrayList<Doctor>) dataArray.get(1);
        this.secretaryArray = (ArrayList<Secretary>) dataArray.get(3);

        refreshLists();
    }

    private void refreshLists() {
        DefaultListModel<String> doctorListModel = new DefaultListModel();
        DefaultListModel<String> secretaryListModel = new DefaultListModel();

        lstDoctors.setModel(doctorListModel);
        lstSecretarys.setModel(secretaryListModel);

        updateDoctorList(doctorListModel);
        updateSecretaryList(secretaryListModel);
        
        lstDoctors.setSelectedIndex(0);
        lstSecretarys.setSelectedIndex(0);
    }

    private void updateDoctorList(DefaultListModel model) {

        for (int i = 0; i < doctorArray.size(); i++) {
            Doctor doctor = doctorArray.get(i);
            model.addElement(doctor.getName());
        }
    }

    private void updateSecretaryList(DefaultListModel model) {

        for (int i = 0; i < secretaryArray.size(); i++) {
            Secretary secretary = secretaryArray.get(i);
            model.addElement(secretary.getName());
        }
    }

    private void deleteDoctor() throws IOException {
        int selectedDoctor = lstDoctors.getSelectedIndex();
        doctorArray.remove(selectedDoctor);
        
        dataArray.set(1, doctorArray);
        DataHandler.writeUserData(dataArray);
        
        refreshLists();
    }

    private void deleteSecretary() throws IOException {
        int selectedSecretary = lstSecretarys.getSelectedIndex();
        secretaryArray.remove(selectedSecretary);
        
        dataArray.set(3, secretaryArray);
        DataHandler.writeUserData(dataArray);
        
        refreshLists();
    }

    /**
     * Creates new form AdminScreen
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstDoctors = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstSecretarys = new javax.swing.JList<>();
        btnCreateDoctor = new javax.swing.JButton();
        btnDeleteDoctor = new javax.swing.JButton();
        btnSetFeedback = new javax.swing.JButton();
        btnCreateSecretary = new javax.swing.JButton();
        btnDeleteSecretary = new javax.swing.JButton();
        btnViewDoctor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(lstDoctors);

        lstSecretarys.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(lstSecretarys);

        btnCreateDoctor.setText("Create New Doctor");
        btnCreateDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDoctorActionPerformed(evt);
            }
        });

        btnDeleteDoctor.setText("Delete Doctor");
        btnDeleteDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDoctorActionPerformed(evt);
            }
        });

        btnSetFeedback.setText("Provide Feedback");
        btnSetFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetFeedbackActionPerformed(evt);
            }
        });

        btnCreateSecretary.setText("Create New Secretary");
        btnCreateSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateSecretaryActionPerformed(evt);
            }
        });

        btnDeleteSecretary.setText("Delete Secretary");
        btnDeleteSecretary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSecretaryActionPerformed(evt);
            }
        });

        btnViewDoctor.setText("View Doctor Details");
        btnViewDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDoctorActionPerformed(evt);
            }
        });

        jLabel1.setText("All Doctors:");

        jLabel2.setText("All Secretaries");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSetFeedback)
                    .addComponent(btnViewDoctor)
                    .addComponent(btnCreateDoctor)
                    .addComponent(btnDeleteDoctor))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCreateSecretary)
                    .addComponent(btnDeleteSecretary)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(809, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateDoctor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteDoctor))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateSecretary)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteSecretary)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSetFeedback)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnViewDoctor)
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDoctorActionPerformed
        new CreateNewDoctorScreen().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnCreateDoctorActionPerformed

    private void btnDeleteDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDoctorActionPerformed
        try {
            deleteDoctor();
        } catch (IOException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteDoctorActionPerformed

    private void btnCreateSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateSecretaryActionPerformed
        new CreateNewSecretaryScreen().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnCreateSecretaryActionPerformed

    private void btnDeleteSecretaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSecretaryActionPerformed
        try {
            deleteSecretary();
        } catch (IOException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteSecretaryActionPerformed

    private void btnViewDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDoctorActionPerformed
        int selectedDoctor = lstDoctors.getSelectedIndex();
        Doctor doctor = doctorArray.get(selectedDoctor);
        new ViewDoctorScreen(doctor).setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btnViewDoctorActionPerformed

    private void btnSetFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetFeedbackActionPerformed
        setVisible(false);
        try {
            new ProvideDoctorFeedBackScreen().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(AdminScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_btnSetFeedbackActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AdminScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AdminScreen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateDoctor;
    private javax.swing.JButton btnCreateSecretary;
    private javax.swing.JButton btnDeleteDoctor;
    private javax.swing.JButton btnDeleteSecretary;
    private javax.swing.JButton btnSetFeedback;
    private javax.swing.JButton btnViewDoctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lstDoctors;
    private javax.swing.JList<String> lstSecretarys;
    // End of variables declaration//GEN-END:variables

}
